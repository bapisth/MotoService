package com.urja.motoservice.database.dao;

import android.database.sqlite.SQLiteDatabase;

import com.urja.motoservice.database.CarServicePrice;
import com.urja.motoservice.database.ServiceRequest;
import com.urja.motoservice.database.UserTransactionAddress;
import com.urja.motoservice.database.ValidVehicle;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 *
 * @see AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig serviceRequestDaoConfig;

    private final ServiceRequestDao serviceRequestDao;

    private final DaoConfig carServicePriceDaoConfig;

    private final CarServicePriceDao carServicePriceDao;

    private final DaoConfig validVehicleDaoConfig;

    private final ValidVehicleDao validVehicleDao;

    private final DaoConfig userTransactionAddressDaoConfig;

    private final UserTransactionAddressDao userTransactionAddressDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        /*Customer Service Request*/
        serviceRequestDaoConfig = daoConfigMap.get(ServiceRequestDao.class).clone();
        serviceRequestDaoConfig.initIdentityScope(type);

        serviceRequestDao = new ServiceRequestDao(serviceRequestDaoConfig, this);

        registerDao(ServiceRequest.class, serviceRequestDao);

        /*Car Service/price table*/
        carServicePriceDaoConfig = daoConfigMap.get(CarServicePriceDao.class).clone();
        carServicePriceDaoConfig.initIdentityScope(type);

        carServicePriceDao = new CarServicePriceDao(carServicePriceDaoConfig, this);

        registerDao(CarServicePrice.class, carServicePriceDao);

        /*-------------Valid Vehicle--------*/
        validVehicleDaoConfig = daoConfigMap.get(ValidVehicleDao.class).clone();
        validVehicleDaoConfig.initIdentityScope(type);

        validVehicleDao = new ValidVehicleDao(validVehicleDaoConfig, this);

        registerDao(ValidVehicle.class, validVehicleDao);

        /*-------------UserTransactionAddress-----------*/
        userTransactionAddressDaoConfig = daoConfigMap.get(UserTransactionAddressDao.class).clone();
        userTransactionAddressDaoConfig.initIdentityScope(type);

        userTransactionAddressDao = new UserTransactionAddressDao(userTransactionAddressDaoConfig, this);

        registerDao(UserTransactionAddress.class, userTransactionAddressDao);
    }

    public void clear() {
        serviceRequestDaoConfig.getIdentityScope().clear();
        carServicePriceDaoConfig.getIdentityScope().clear();
        validVehicleDaoConfig.getIdentityScope().clear();
        userTransactionAddressDaoConfig.getIdentityScope().clear();
    }

    public ServiceRequestDao getServiceRequestDao() {
        return serviceRequestDao;
    }

    public CarServicePriceDao getCarServicePriceDao() {
        return carServicePriceDao;
    }

    public ValidVehicleDao getValidVehicleDao() {
        return validVehicleDao;
    }

    public UserTransactionAddressDao getUserTransactionAddressDao() {
        return userTransactionAddressDao;
    }

}
